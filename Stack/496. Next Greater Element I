class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {

         int n2[]=new int [nums2.length];
         Stack<Integer> st=new Stack<>();

          n2[nums2.length-1]=-1;
          st.push(nums2[nums2.length-1]);
//-----------------------------------------------------Algorithum-------------------------O(n)
         for(int i=nums2.length-2;i>=0 ;i--)
         { //pop
           while( ! st.isEmpty() && st.peek()<= nums2[i]){
               st.pop();
           }
          //calculate
            n2[i]=(st.isEmpty()) ? (-1 ) : (st.peek() ) ;
          //push
             st.push(nums2[i]);
         }

//--------------------------------------------------------------------------------------------         
//compare
  int n1[]=new int[nums1.length];
  
  for(int i=0 ;i<nums1.length;i++)
  {
       int x=nums1[i];
       for(int j=0;j<nums2.length;j++)
       {
            if(x==nums2[j])
            {
                   n1[i]=n2[j];
             }
     }
  }

     return n1;
        
    }
}
