Given a string s, return the number of homogenous substrings of s.
  Since the answer may be too large, return it modulo 109 + 7.

A string is homogenous if all the characters of the string are the same.

A substring is a contiguous sequence of characters within a string.

 

Example 1:

Input: s = "abbcccaa"
Output: 13
Explanation: The homogenous substrings are listed as below:
"a"   appears 3 times.
"aa"  appears 1 time.
"b"   appears 2 times.
"bb"  appears 1 time.
"c"   appears 3 times.
"cc"  appears 2 times.
"ccc" appears 1 time.
3 + 1 + 2 + 1 + 3 + 2 + 1 = 13.
Example 2:

Input: s = "xy"
Output: 2
Explanation: The homogenous substrings are "x" and "y".
--------------------------------------------------------------------------------------------------

class Solution {
    public int countHomogenous(String s) {
        int sum=0;
        char prev='?';
        int count=1;

        for(int i=0;i<s.length();i++){
          if(s.charAt(i)!= prev){
              prev=s.charAt(i);
              count=1;
          }else if(s.charAt(i)== prev){
              count++;            
          }
          sum+=count;
          sum %= 1000_000_007;
        }
        

        return sum;
    }
}
