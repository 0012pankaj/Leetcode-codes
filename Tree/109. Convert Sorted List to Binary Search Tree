/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        ArrayList<Integer> al=new ArrayList<>();
        while(head != null){
            al.add(head.val);
            head=head.next;
        }

        return createBST(al,0,al.size()-1);
    }

    public TreeNode createBST(ArrayList<Integer> al,int s,int e){
        if(s>e) return null;

        int m=(s+e)/2;
        TreeNode node=new TreeNode(al.get(m));

        node.left= createBST(al,s,m-1);
         node.right= createBST(al,m+1,e);

         return node;
    }
}
