
You are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:

struct Node {
  int val;
  Node *left;
  Node *right;
  Node *next;
}
Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.

Initially, all next pointers are set to NULL.
___________________________________________________________________________________
class Solution {
    public Node connect(Node root) {
         
        if(root == null ||root.left==null || root.right==null)
        return root;

        root.left.next=root.right;

        if(root.next !=null)
        {
            root.right.next=root.next.left;
        }

         connect(root.left); 
         connect(root.right); 

       return root; 
    }
}
/* Approch:
1.for each node we check it is null or not And.
2.for every node we point  its left'next to its right.
3.for ever node if its next is not null it means it have child so we conect its child node to each other
4.at last repeat the same process and do recursive call    */
