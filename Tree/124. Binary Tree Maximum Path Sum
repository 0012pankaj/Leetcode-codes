A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path.

 _________________________________________________________________________





class Solution {
    public int maxPathSum(TreeNode root) { 
        int[] maxsum=new int[1];  //use array as integer is not reference;
        maxsum[0]=Integer.MIN_VALUE;
        maxpath(root,maxsum);
        return maxsum[0];
        
    }

    public static int  maxpath(TreeNode node,int[] maxsum){
     if(node == null){
         return  0;
     }

     int leftsum=Math.max(0,maxpath(node.left,maxsum));
     int rightsum=Math.max(0,maxpath(node.right,maxsum));
        //compare 0 in max to avoid negitve path 
     maxsum[0]=Math.max(maxsum[0],leftsum + rightsum + node.val);

     
     return node.val+Math.max(leftsum , rightsum);
    }
}
