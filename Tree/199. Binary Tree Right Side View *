
class Solution {
    
     public static void helper(TreeNode root ,int level,List<Integer> list)
    {
        if(root == null)
        return;
        
       if(level==list.size())
       {
           list.add(root.val);
         
       }
         //if it ask for left view than cal for left view first than call for right view 
         //butv here they ask for right view so we call right first
    
          helper( root.right ,level+1,list);
          helper( root.left ,level+1,list);
       
      
     }

public List<Integer> rightSideView(TreeNode root) {  
         List<Integer> list =new ArrayList<Integer>();
        helper(root,0,list);
        return list;
    }
}


//Tc-->O(n) Sp-->O(n)
/* we use helper function and ArrayList to store data
idea: if reach at a level first time only than we can add data otherwise not add data 
At every recursion call level increase #Striver*/
