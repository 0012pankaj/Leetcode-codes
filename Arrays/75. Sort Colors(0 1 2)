class Solution { /*Two pointer  (Dutch National flag algorithm. )*/
    public void sortColors(int[] nums) {
        int low=0,mid=0,high=nums.length-1;

        while(mid<=high){
            if(nums[mid]== 0){
                swap(nums,mid,low);
                mid++;
                low++;
            }
            else if(nums[mid]==1){
                mid++;
            }else{
                //nums[mid]==2
                swap(nums,mid,high);
                high--;
            }
        }
    }

    public static void swap(int arr[],int a,int b){
        int temp=arr[a];
        arr[a]=arr[b];
        arr[b]=temp;
    }
}
/*Algo:-
This algorithm contains 3 pointers i.e. low, mid, and high, and 3 main rules.  The rules are the following:

arr[0….low-1] contains 0. [Extreme left part]
arr[low….mid-1] contains 1.
arr[high+1….n-1] contains 2. [Extreme right part], n = size of the array*/
