/*We have two arrays. Left one we sum from left to right. Right one we sum from right to left.
The idea is if pivot exsist, leftside + pivot = rightside + pivot.
For example, arr = [1, 3, 7, 6, 5, 6]
left = [1, 4, 11 ,17, 22, 28]
right = [28, 27, 24, 17, 11, 6]
If there is a pivot, it shuould have the same index, then we return it, otherwise return -1;
*/



class Solution {
    public int pivotIndex(int[] nums) {
        int n=nums.length;
        int left_sum[]=new int[n];
         int right_sum[]=new int[n];
        
        left_sum[0]=nums[0];
        for(int i=1 ; i<n ; i++)                      //sum from left side  arary
        { left_sum[i]=left_sum[i-1]+nums[i];
            
        }
        right_sum[n-1]= nums[n-1];
        for(int i=n-2 ; i>=0 ; i--)
        { right_sum[i]=nums[i]+right_sum[i+1];    //sum from right side  arary
            
        }
        for(int i=0;i<n;i++){
            if(left_sum[i]==right_sum[i]){
                return i;
            }
        }
        
        return -1;
    }
}   //tc-->O(n)  as->o(n)
