class Solution {                                                                    // tc---->(n*log n)  sp-->O(n)
    public int[][] merge(int[][] intervals) {
        
                                                                             // sort array in ascending order
        Arrays.sort(intervals,(a,b) -> a[0]-b[0]);  
                                                                          //creat new arraylist
        List<int[]> res=new ArrayList<>();
                                                                         // add first raw
        res.add(intervals[0]);
           
        int j=0;
        for(int i=1;i<intervals.length;i++)
        {
            // one more arry we use for comparision
            int inter[]=res.get(j);                                        //inter array become that first raw for compare
         if(intervals[i][0]<=inter[1])                                    //compare next raw's first element with last element of first raw
         {
             inter[1]=Math.max(inter[1],intervals[i][1]);                    //replace the last element of first raw with
         }else{                                                             //maximum of first raw's last and second raws last 
             res.add(intervals[i]);
             j++;                                                            // condition fail add raw direct result array
              }        
         }
                                                                                // convert arraylist to array
        return res.toArray(new int[res.size()][]);
       
    }
}
