Find all valid combinations of k numbers that sum up to n such that the following conditions are true:

Only numbers 1 through 9 are used.
Each number is used at most once.
Return a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.
__________________________________________________________

class Solution {
    public List<List<Integer>> combinationSum3(int size, int target) {
         
              
    List<List<Integer>> ans=new ArrayList<>();
    List<Integer> list=new ArrayList<Integer>();
    
     helper(size,target,list,ans,1);
     return ans;

    }

    public static void helper(int s,int tar,List<Integer> list ,List<List<Integer>> ans,int idx)
    {  
       if(list.size()==s && tar == 0)
       {  
    
             ans.add(new ArrayList(list));
             return;
          
       }
       if(list.size() >= s) return;

      for(int i=idx;i<=9;i++){
            
            list.add(i);
            helper(s,tar-i,list,ans,i+1);  //i+1 unique for combination and only i for permutation
            list.remove(list.size()-1);

            }
         }
 }
  
