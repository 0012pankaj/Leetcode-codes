  public int lengthOfLongestSubstring(String s) {
//         HashMap<Character,Integer> h=new HashMap<Character,Integer>();
//         int max=0;
//         for(int i=0,j=0 ; i<s.length();++i)
//         {
//             if(h.containsKey(s.charAt(i))){
//                 j=Math.max(j,h.get(s.charAt(i))+1);
//             }
//             h.put(s.charAt(i),i);
//           max=Math.max(max,i-j+1);
//         }
         
        
//         return max;
        
    //2.approch:-----------------Sliding window     
        int ans = 0;
        int ei = 0;
        int si = 0;
        int[] arr = new int[128];
        while(ei<s.length()){
            //grow
            arr[s.charAt(ei)]++;
            //shrink
            while(arr[s.charAt(ei)]>1){
                arr[s.charAt(si)]--;
                si++;
            }
            //ans calculate
            ans = Math.max(ans,ei-si+1);
            ei++;
        }
        return ans;
    }
}   //TC-->O(n) sp-->O(1);
