class Solution {                                                             //using manacher's Algo (axis orbit)
    public String longestPalindrome(String s) {
        String res=" ";
        for(int i=0 ;i<s.length();i++)
        {
            String s1=palindromStr(s,i,i); // for odd length string [aba]
            String s2=palindromStr(s,i,i+1); // for even length string [abba]
            
           res= res.length() > s1.length() ? res : s1 ;
           res= res.length() > s2.length() ? res : s2 ;
        }
        
        
     return res;  
    }
    
  public String  palindromStr(String s,int l ,int r){
      while(l>=0 && r<s.length() && s.charAt(l)==s.charAt(r))
      {
          r++;
          l--;
      }
     return s.substring(l+1,r) ;
  }
}

/* manacher's Algo (axis orbit)  tc-->O(n^2)
first loop:- itracte over substring charcters(axis) and for ever index check palindrom by moving left of that index and right
second loop :- help to check pelindrom at each index ve check gor both odd size substring and even size 
*/
