class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
         if(root==null){
            return 0;
        }
        
        //bfs

        Queue<TreeNode> q=new LinkedList<>();
        ArrayList<Long> l=new ArrayList<>();
        q.add(root);
    
        int msum=Integer.MIN_VALUE;

        while(!q.isEmpty()){
            long levelsum=0;
            int levelsize=q.size();

            for(int i=0;i<levelsize;i++){
                TreeNode node=q.poll();
                levelsum+=node.val;

                if(node.left != null){
                    q.add(node.left);
                }

                   if(node.right != null){
                    q.add(node.right);
                }
            }

           l.add(levelsum);
        }

        Collections.sort(l);
        int n=l.size();
        if(k>n){
            return -1;
        }


     return l.get(n-k);
    }
    
}
