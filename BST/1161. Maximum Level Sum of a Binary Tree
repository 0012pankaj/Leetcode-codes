/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {

        if(root==null){
            return 0;
        }
        
        //bfs

        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        int mlevel=1;
        int msum=Integer.MIN_VALUE;
        int level=1;


        while(!q.isEmpty()){
            int levelsum=0;
            int levelsize=q.size();

            for(int i=0;i<levelsize;i++){
                TreeNode node=q.poll();
                levelsum+=node.val;

                if(node.left != null){
                    q.add(node.left);
                }

                   if(node.right != null){
                    q.add(node.right);
                }
            }

            if(levelsum>msum){
                msum=levelsum;
                mlevel=level;
            }
            level++;
        }

        return mlevel;
    }
}
