Given the root of a binary tree, determine if it is a valid binary search tree (BST).
_____________________---
class Solution {
    public boolean helper(TreeNode root,long Imax,long Imin)
    {
        if(root==null) return true;
        if(root.val>=Imax || root.val <=Imin) return false;

        return helper( root.left,root.val,Imin) && helper(root.right ,Imax,root.val);
    }

    public boolean isValidBST(TreeNode root) {
   return  helper(root,Long.MAX_VALUE,Long.MIN_VALUE);    
    }
}
/*given rage -2^31 <= Node.val <= 2^31 - 1 so take Long
Idea:we consider a range at each node that left node is lie in (long min value ---to current node) and right node is lie in ( current node---to long max value)
