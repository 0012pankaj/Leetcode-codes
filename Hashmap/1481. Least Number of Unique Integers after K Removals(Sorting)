Given an array of integers arr and an integer k. Find
the least number of unique integers after removing exactly k elements.

Example 1:

Input: arr = [5,5,4], k = 1
Output: 1
Explanation: Remove the single 4, only 5 is left.
Example 2:
Input: arr = [4,3,1,1,3,3,2], k = 3
Output: 2
Explanation: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.

Constraints:

1 <= arr.length <= 10^5
1 <= arr[i] <= 10^9
0 <= k <= arr.length
_________________________________________________________________________________________________________
class Solution {
    public int findLeastNumOfUniqueInts(int[] nums, int k) {
       HashMap<Integer,Integer> map=new HashMap<>();
       int n=nums.length;
       //ferquency
       for(int i=0;i<n;i++){      
         map.put(nums[i],map.getOrDefault(nums[i],0)+1);
       }

    //to short HashMap on the Bases of Value
     List<Map.Entry<Integer, Integer>> eList = new ArrayList<>(map.entrySet());            //1 .put  MapEntry in List
        eList.sort((a, b) -> a.getValue().compareTo(b.getValue()));               //2 .Sort List based on Value 
     int count=0;
      for(Map.Entry<Integer, Integer> e:eList){
        while(k!=0 && e.getValue()>0){       
                map.put(e.getKey(),map.getOrDefault(e.getKey(),0)-1);
                k--;            
              }

        }

         for(Map.Entry<Integer, Integer> e:eList){
             if( e.getValue()>0){
            count++;   
              }
        }
      System.out.println(eList);
      

      return (count);  

    }
}
