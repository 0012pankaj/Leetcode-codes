
Given two non-negative integers num1 and num2 represented as strings,
return the product of num1 and num2, also represented as a string.

Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.

Example 1:
Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:
Input: num1 = "123", num2 = "456"
Output: "56088"

Constraints:

1 <= num1.length, num2.length <= 200
num1 and num2 consist of digits only.
Both num1 and num2 do not contain any leading zero, except the number 0 itself.
____________________________________________________________________________________________________________________
class Solution {
    public String multiply(String num1, String num2) {
        int n1=num1.length();
        int n2=num2.length();
        
        if(num1.equals("0") ||num2.equals("0")) 
         return "0";
         if(num1.equals("1") ) return num2;
         if(num2.equals("1") ) return num1;
        
         
       
        int resarr[]=new int[n1+n2];

         for(int i=n1-1;i>=0;i--){
             for(int j=n2-1;j>=0;j--){
                 int res=(num1.charAt(i)-'0')*(num2.charAt(j)-'0') ;
                 res+=resarr[i+j+1];
                 resarr[i+j+1]=res%10;
                 resarr[i+j]+=res/10;        
             }
         }

         String ans="";
        for(int i: resarr){
          if(ans.length()==0 && i==0) continue;
           ans=ans+i;
        }

     return ans;
    }
}
