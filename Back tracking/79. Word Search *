class Solution {

    public boolean exist(char[][] board, String word) {

     for(int i=0;i<board.length;i++)
     {
         for(int j=0;j<board[0].length;j++)
         {
             if(board[i][j]== word.charAt(0))
             {
                 boolean result=findword(board,i,j,word,0);
                 if(result){
                     return true;
                 }
             }
         }
     }

     return false;
    }

    public static boolean findword(char[][] board,int rr,int cc, String word,int w_idx )
    {   if(w_idx == word.length() )
         return true;

        if(cc<0 || cc >= board[0].length || rr<0 || rr >= board.length || board[rr][cc] != word.charAt(w_idx) ){
            return false;
        }
        
        int r[]={1,-1,0,0};
         
        int c[]={0,0,-1,1};
        
        board[rr][cc]='*';
        for(int i=0;i<r.length;i++)
        {
            boolean ans=findword(board,rr+r[i],cc+c[i],word,w_idx+1); 
            if(ans)
            {
                return true;
            }
        }
        board[rr][cc]=word.charAt(w_idx); //back track


        return false;

    }
}



